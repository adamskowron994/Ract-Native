"use strict";
/**
 * @fileoverview gRPC-Web generated client stub for buf.connect.demo.eliza.v1
 * @enhanceable
 * @public
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ElizaServiceClient = void 0;
// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.20.3
// source: eliza.proto
/* eslint-disable */
// @ts-nocheck
const grpcWeb = require("grpc-web");
const eliza_pb = require("./eliza_pb");
class ElizaServiceClient {
    constructor(hostname, credentials, options) {
        this.methodDescriptorSay = new grpcWeb.MethodDescriptor('/buf.connect.demo.eliza.v1.ElizaService/Say', grpcWeb.MethodType.UNARY, eliza_pb.SayRequest, eliza_pb.SayResponse, (request) => {
            return request.serializeBinary();
        }, eliza_pb.SayResponse.deserializeBinary);
        this.methodDescriptorIntroduce = new grpcWeb.MethodDescriptor('/buf.connect.demo.eliza.v1.ElizaService/Introduce', grpcWeb.MethodType.SERVER_STREAMING, eliza_pb.IntroduceRequest, eliza_pb.IntroduceResponse, (request) => {
            return request.serializeBinary();
        }, eliza_pb.IntroduceResponse.deserializeBinary);
        if (!options)
            options = {};
        if (!credentials)
            credentials = {};
        options['format'] = 'text';
        this.client_ = new grpcWeb.GrpcWebClientBase(options);
        this.hostname_ = hostname.replace(/\/+$/, '');
        this.credentials_ = credentials;
        this.options_ = options;
    }
    say(request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/buf.connect.demo.eliza.v1.ElizaService/Say', request, metadata || {}, this.methodDescriptorSay, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/buf.connect.demo.eliza.v1.ElizaService/Say', request, metadata || {}, this.methodDescriptorSay);
    }
    introduce(request, metadata) {
        return this.client_.serverStreaming(this.hostname_ +
            '/buf.connect.demo.eliza.v1.ElizaService/Introduce', request, metadata || {}, this.methodDescriptorIntroduce);
    }
}
exports.ElizaServiceClient = ElizaServiceClient;
